class Solution {
    
    public List<String> res = new ArrayList<>();
    public Map<Character,char[]> map = new HashMap<>();
    
    public void traverse(char a[],int i,String str){
        if(i==str.length()){res.add(new String(a));return;}
        for(char x:map.get(str.charAt(i))){
            a[i] = x;
            traverse(a,i+1,str);
        }
    }
    
    public List<String> letterCombinations(String digits) {
        
        map.put('2',new char[]{'a','b','c'});
        map.put('3',new char[]{'d','e','f'});
        map.put('4',new char[]{'g','h','i'});
        map.put('5',new char[]{'j','k','l'});
        map.put('6',new char[]{'m','n','o'});
        map.put('7',new char[]{'p','q','r','s'});
        map.put('8',new char[]{'t','u','v'});
        map.put('9',new char[]{'w','x','y','z'});
        traverse(new char[digits.length()],0,digits);
        if(digits.equals("")){res = new ArrayList<>();}
        return res;
    }
}
