class Solution {
    int m,n;
    int DP[][];
    public int traverse(int a[][],int i,int j){
        if(i==m-1 && j==n-1){return DP[i][j] = 1;}
        if(i>=m || j>=n){return 0;}
        if(a[i][j]==1){return 0;}
        if(DP[i][j]!=0){return DP[i][j];}
        return DP[i][j] = traverse(a,i+1,j)+traverse(a,i,j+1);
    }
    public int uniquePathsWithObstacles(int[][] a) {
        m = a.length;
        n = a[0].length;
        if(a[m-1][n-1]==1){return 0;}
        DP = new int[m][n];
        return traverse(a,0,0);
    }
}
